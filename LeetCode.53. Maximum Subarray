
//超垃圾算法，暴力求解188ms
/**
 * @param {number[]} nums
 * @return {number}
 */
var maxSubArray = function(nums) {
    var max = -10000000;
    var temp = 0;
    if(nums.length ===1){
        return nums
    }
    
    for(var i = 0;i < nums.length;i++){
        temp = nums[i]
        if(temp>max){
                max = temp;
                
            }
        
        for(var j = i+1;j<nums.length;j++){
            temp += nums[j];
            if(temp>max){
                max = temp;
                var k = j-i
            }
        }
        
    }
    console.log(max)
    return max
    
};
///相对好一点点，只用了一次循环  两个算法对于max的初始值都只是简单的设置了一个较大的负数，不是很合理。没有去写标准的最小值
/**
 * @param {number[]} nums
 * @return {number}
 */
var maxSubArray = function(nums) {
    var max =-111111111111
    var temp = 0
    for(var i = 0;i<nums.length;i++){
        temp += nums[i];
        if(temp < nums[i]){
            temp = nums[i];
            //break;
        }
        if(temp>max){
            max = temp;
        }
    }
    
    return max
};
